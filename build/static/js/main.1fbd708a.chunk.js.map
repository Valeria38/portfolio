{"version":3,"sources":["components/HomePage.js","components/ReactPage.js","components/JSPage.js","components/LayoutPage.js","components/ContactsPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","React","Component","ReactPage","className","href","target","src","JSPage","LayoutPage","ContactsPage","App","react_router_dom","to","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAgBeA,mLAZX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,iFACAF,EAAAC,EAAAC,cAAA,8EACAF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,yGAReC,IAAMC,WCmBdC,mLAjBX,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACbN,EAAAC,EAAAC,cAAA,KAAGK,KAAK,iDAAiDC,OAAO,UAC9DR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAAA,OAAKO,IAAI,gFAGbT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBAAf,qBACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBAAf,6BAZcH,IAAMC,WCQfM,mLANX,OACEV,EAAAC,EAAAC,cAAA,4BAHeC,IAAMC,WCQZO,mLANX,OACEX,EAAAC,EAAAC,cAAA,gCAHmBC,IAAMC,WCQhBQ,mLANX,OACEZ,EAAAC,EAAAC,cAAA,kCAHqBC,IAAMC,WC6BlBS,mLApBX,OACEb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,KAAT,SACJf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,UAAT,UACJf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,OAAT,eACJf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,WAAT,WACJf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,aAAT,cAENf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjCC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWd,IACtCL,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,MAAMC,UAAWT,IACnCV,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWR,IACvCX,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWP,YAhBjCR,aCGEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAea,SAAUC,cAAwB5B,EAAAC,EAAAC,cAAC2B,EAAD,OAAyBC,SAASC,eAAe,SD0H5G,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1fbd708a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Hi! My name is Valeria Gora.</h3>\r\n        <p>I have good knowledge in HTML/CSS and well familiar with JavaScript.</p>\r\n        <p>I am able to work on and support several projects simultaneously.</p>\r\n        <p>Continuously striving to improve all practices, routines and systems.</p>\r\n        <p> I am looking for a job where I can work in a team, improve my professional skills. </p>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nclass ReactPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"react-page\">\r\n        <h2>My React Projects:</h2>\r\n        <div className=\"react-page__project-container\">\r\n          <a href=\"https://valeria38.github.io/react-tic-tac-toe/\" target=\"_blank\">\r\n            <div className=\"react-page__project\">\r\n              <img src=\"https://github.com/Valeria38/portfolio/tree/develop/src/img/tictactoe.jpg\" />\r\n            </div>\r\n          </a>\r\n          <div className=\"react-page__project\">To do application</div>\r\n          <div className=\"react-page__project\">Weather forecast</div>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ReactPage;","import React from 'react';\r\n\r\nclass JSPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>JSPage</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default JSPage;","import React from 'react';\r\n\r\nclass LayoutPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>LayoutPage</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default LayoutPage;","import React from 'react';\r\n\r\nclass ContactsPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>ContactsPage</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ContactsPage;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport ReactPage from './components/ReactPage';\nimport JSPage from './components/JSPage';\nimport LayoutPage from './components/LayoutPage';\nimport ContactsPage from './components/ContactsPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/react\">React</Link></li>\n            <li><Link to=\"/js\">JavaScript</Link></li>\n            <li><Link to=\"/layout\">Layout</Link></li>\n            <li><Link to=\"/contacts\">Contacts</Link></li>\n          </ul>\n          <hr />\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/react\" component={ReactPage} />\n          <Route exact path=\"/js\" component={JSPage} />\n          <Route exact path=\"/layout\" component={LayoutPage} />\n          <Route exact path=\"/contacts\" component={ContactsPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}